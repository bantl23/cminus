/if/         { fmt.Println(currStr(yylex)); return IF }
/else/       { fmt.Println(currStr(yylex)); return ELSE }
/int/        { fmt.Println(currStr(yylex)); return INT }
/void/       { fmt.Println(currStr(yylex)); return VOID }
/while/      { fmt.Println(currStr(yylex)); return WHILE }
/!=/         { fmt.Println(currStr(yylex)); return NEQ }
/==/         { fmt.Println(currStr(yylex)); return EQ }
/=/          { fmt.Println(currStr(yylex)); return ASSIGN }
/<=/         { fmt.Println(currStr(yylex)); return LTE }
/</          { fmt.Println(currStr(yylex)); return LT }
/>=/         { fmt.Println(currStr(yylex)); return GTE }
/>/          { fmt.Println(currStr(yylex)); return GT }
/\+/         { fmt.Println(currStr(yylex)); return PLUS }
/-/          { fmt.Println(currStr(yylex)); return MINUS }
/\*/         { fmt.Println(currStr(yylex)); return TIMES }
/\//         { fmt.Println(currStr(yylex)); return OVER }
/\(/         { fmt.Println(currStr(yylex)); return LPAREN }
/\)/         { fmt.Println(currStr(yylex)); return RPAREN }
/\[/         { fmt.Println(currStr(yylex)); return LBRACKET }
/\]/         { fmt.Println(currStr(yylex)); return RBRACKET }
/\{/         { fmt.Println(currStr(yylex)); return LBRACE }
/\}/         { fmt.Println(currStr(yylex)); return RBRACE }
/,/          { fmt.Println(currStr(yylex)); return COMMA }
/;/          { fmt.Println(currStr(yylex)); return SEMI }
/[0-9]+/     { fmt.Println(currStr(yylex)); return NUM }
/[a-zA-Z]+/  { fmt.Println(currStr(yylex)); return ID }
/[ \t]+/     { /* white space */ }
/\n/         { /* newline */ }
/./          { fmt.Printf("lex error\n") }
//
package main

import (
  "fmt"
)
